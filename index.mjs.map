{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/async.js","../lib/sync.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.dir] - base directory\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'dir': '/foo/bar/baz'\n* };\n*\n* var err = validate( opts, options );\n* if ( err ) {\n*    throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '0C62h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'dir' ) ) {\n\t\topts.dir = options.dir;\n\t\tif ( !isString( opts.dir ) ) {\n\t\t\treturn new TypeError( format( '0C62i', 'dir', opts.dir ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { resolve as resolve } from 'path' ;\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport isFunction from '@stdlib/assert-is-function' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\nimport cwd from '@stdlib/process-cwd' ;\nimport exists from '@stdlib/fs-exists' ;\nimport validate from './validate.js' ;\n\n\n// MAIN //\n\n/**\n* Asynchronously resolves a path according to a predicate function by walking parent directories.\n*\n* @param {string} path - path to resolve\n* @param {Options} [options] - function options\n* @param {string} [options.dir] - base directory\n* @param {Function} predicate - callback which tests whether a resolved path passes a test\n* @param {Function} clbk - callback to invoke after resolving a path\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} predicate function argument must be a function\n* @throws {TypeError} callback argument must be a function\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n*\n* @example\n* resolveParentPathBy( 'package.json', predicate, onPath );\n*\n* function predicate( path, next ) {\n*     next( null, true );\n* }\n*\n* function onPath( error, path ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( path );\n* }\n*/\nfunction resolveParentPathBy( path, options, predicate, clbk ) {\n\tvar spath;\n\tvar child;\n\tvar test;\n\tvar opts;\n\tvar done;\n\tvar dir;\n\tvar err;\n\tif ( !isString( path ) ) {\n\t\tthrow new TypeError( format( '0C63R', path ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 3 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\ttest = predicate;\n\t\tdone = clbk;\n\t} else {\n\t\ttest = options;\n\t\tdone = predicate;\n\t}\n\tif ( !isFunction( test ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Predicate function must be a function. Value: `%s`.', test ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( '0C62n', done ) );\n\t}\n\tif ( opts.dir ) {\n\t\tdir = resolve( cwd(), opts.dir );\n\t} else {\n\t\tdir = cwd();\n\t}\n\tspath = resolve( dir, path );\n\texists( spath, onExists );\n\n\t/**\n\t* Resolves the next candidate path.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction next() {\n\t\t// Resolve a parent directory:\n\t\tchild = dir;\n\t\tdir = resolve( dir, '..' );\n\n\t\t// If we have already reached root, we cannot resolve any higher directories...\n\t\tif ( child === dir ) {\n\t\t\treturn done( null, null );\n\t\t}\n\t\t// Resolve the next search path:\n\t\tspath = resolve( dir, path );\n\t\texists( spath, onExists );\n\t}\n\n\t/**\n\t* Callback invoked after checking for path existence.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} bool - boolean indicating if a path exists\n\t* @returns {void}\n\t*/\n\tfunction onExists( error, bool ) { // eslint-disable-line handle-callback-err\n\t\tif ( bool ) {\n\t\t\treturn test( spath, onTest );\n\t\t}\n\t\tnext();\n\t}\n\n\t/**\n\t* Callback invoked after testing a resolved path.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} bool - boolean indicating if a path exists\n\t* @returns {void}\n\t*/\n\tfunction onTest( error, bool ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( bool ) {\n\t\t\treturn done( null, spath );\n\t\t}\n\t\tnext();\n\t}\n}\n\n\n// EXPORTS //\n\nexport default resolveParentPathBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { resolve as resolve } from 'path' ;\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport isFunction from '@stdlib/assert-is-function' ;\nimport cwd from '@stdlib/process-cwd' ;\nimport { sync as exists } from '@stdlib/fs-exists' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\nimport validate from './validate.js' ;\n\n\n// MAIN //\n\n/**\n* Synchronously resolves a path according to a predicate function by walking parent directories.\n*\n* @param {string} path - path to resolve\n* @param {Options} [options] - function options\n* @param {string} [options.dir] - base directory\n* @param {Function} predicate - callback which tests whether a resolved path passes a test\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {(string|null)} resolved path or null\n*\n* @example\n* function predicate() {\n*     return true;\n* }\n*\n* var path = resolveParentPathBy( 'package.json', predicate );\n* // e.g., returns '...'\n*/\nfunction resolveParentPathBy( path, options, predicate ) {\n\tvar spath;\n\tvar child;\n\tvar test;\n\tvar opts;\n\tvar dir;\n\tvar err;\n\tif ( !isString( path ) ) {\n\t\tthrow new TypeError( format( '0C63R', path ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\ttest = predicate;\n\t} else {\n\t\ttest = options;\n\t}\n\tif ( !isFunction( test ) ) {\n\t\tthrow new TypeError( format( '0C643', test ) );\n\t}\n\tif ( opts.dir ) {\n\t\tdir = resolve( cwd(), opts.dir );\n\t} else {\n\t\tdir = cwd();\n\t}\n\t// Start at a base directory and continue moving up through each parent directory until able to resolve a search path or until reaching the root directory...\n\twhile ( child !== dir ) {\n\t\tspath = resolve( dir, path );\n\t\tif ( exists( spath ) && test( spath ) ) {\n\t\t\treturn spath;\n\t\t}\n\t\tchild = dir;\n\t\tdir = resolve( dir, '..' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default resolveParentPathBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Resolve a path according to a predicate function by walking parent directories.\n*\n* @module @stdlib/fs-resolve-parent-path-by\n*\n* @example\n* import resolveParentPathBy from '@stdlib/fs-resolve-parent-path-by' ;\n*\n* resolveParentPathBy( 'package.json', predicate, onPath );\n*\n* function predicate( path, next ) {\n*     next( null, true );\n* }\n*\n* function onPath( error, path ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( path );\n* }\n*\n* @example\n* import resolveParentPathBy from '@stdlib/fs-resolve-parent-path-by' ;\n*\n* function predicate() {\n*     return true;\n* }\n*\n* var path = resolveParentPathBy.sync( 'package.json', predicate );\n* // e.g., returns '...'\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport resolveParentPathBy from './async.js' ;\nimport sync from './sync.js' ;\n\n\n// MAIN //\n\nsetReadOnly( resolveParentPathBy, 'sync', sync );\n\n\n// EXPORTS //\n\nexport default resolveParentPathBy;\n"],"names":["validate","opts","options","isObject","hasOwnProp","dir","isString","TypeError","format","resolveParentPathBy","path","predicate","clbk","spath","child","test","done","err","arguments","length","isFunction","next","resolve","exists","onExists","error","bool","onTest","cwd","setReadOnly","sync"],"mappings":";;+yCAkDA,SAASA,EAAUC,EAAMC,GACxB,OAAMC,EAAUD,GAGXE,EAAYF,EAAS,SACzBD,EAAKI,IAAMH,EAAQG,KACbC,EAAUL,EAAKI,MACb,IAAIE,UAAWC,EAAQ,QAAS,MAAOP,EAAKI,MAG9C,KARC,IAAIE,UAAWC,EAAQ,QAASN,ICSzC,SAASO,EAAqBC,EAAMR,EAASS,EAAWC,GACvD,IAAIC,EACAC,EACAC,EACAd,EACAe,EACAX,EACAY,EACJ,IAAMX,EAAUI,GACf,MAAM,IAAIH,UAAWC,EAAQ,QAASE,IAGvC,GADAT,EAAO,GACFiB,UAAUC,OAAS,EAAI,CAE3B,GADAF,EAAMjB,EAAUC,EAAMC,GAErB,MAAMe,EAEPF,EAAOJ,EACPK,EAAOJ,OAEPG,EAAOb,EACPc,EAAOL,EAER,IAAMS,EAAYL,GACjB,MAAM,IAAIR,UAAWC,EAAQ,wEAAyEO,IAEvG,IAAMK,EAAYJ,GACjB,MAAM,IAAIT,UAAWC,EAAQ,QAASQ,IAgBvC,SAASK,IAMR,GAJAP,EAAQT,EACRA,EAAMiB,EAASjB,EAAK,MAGfS,IAAUT,EACd,OAAOW,EAAM,KAAM,MAGpBH,EAAQS,EAASjB,EAAKK,GACtBa,EAAQV,EAAOW,GAWhB,SAASA,EAAUC,EAAOC,GACzB,GAAKA,EACJ,OAAOX,EAAMF,EAAOc,GAErBN,IAWD,SAASM,EAAQF,EAAOC,GACvB,OAAKD,EACGT,EAAMS,GAETC,EACGV,EAAM,KAAMH,QAEpBQ,IAzDAhB,EADIJ,EAAKI,IACHiB,EAASM,IAAO3B,EAAKI,KAErBuB,IAEPf,EAAQS,EAASjB,EAAKK,GACtBa,EAAQV,EAAOW,GC1ChB,SAASf,EAAqBC,EAAMR,EAASS,GAC5C,IAAIE,EACAC,EACAC,EACAd,EACAI,EACAY,EACJ,IAAMX,EAAUI,GACf,MAAM,IAAIH,UAAWC,EAAQ,QAASE,IAGvC,GADAT,EAAO,GACFiB,UAAUC,OAAS,EAAI,CAE3B,GADAF,EAAMjB,EAAUC,EAAMC,GAErB,MAAMe,EAEPF,EAAOJ,OAEPI,EAAOb,EAER,IAAMkB,EAAYL,GACjB,MAAM,IAAIR,UAAWC,EAAQ,QAASO,IAQvC,IALCV,EADIJ,EAAKI,IACHiB,EAASM,IAAO3B,EAAKI,KAErBuB,IAGCd,IAAUT,GAAM,CAEvB,GADAQ,EAAQS,EAASjB,EAAKK,GACjBa,EAAQV,IAAWE,EAAMF,GAC7B,OAAOA,EAERC,EAAQT,EACRA,EAAMiB,EAASjB,EAAK,MAErB,OAAO,KC9BRwB,EAAApB,EAAA,OAAAqB"}